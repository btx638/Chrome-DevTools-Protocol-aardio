import web.json;
import util.metaProperty;
import aaz.libhpsocket.app.websocket.client.handler;
import aaz.bilibili.packet;

namespace aaz.bilibili.handler;
..table.mix(self, ..aaz.libhpsocket.app.websocket.client.handler)

afterUpgrade = function(userData){ 
	var roomId = userData.roomId.value;
	var token = userData.token.value; 
	
	return  ..aaz.bilibili.packet.getAuthPack(roomId, token)
}

onBinMsg = function(extra){
	//  剩余数据的长度
	var unreadLen = ..raw.sizeof(extra.pData);
	//  指针偏移，始终指向数据的头部
	var offset = 0;

	while(true){	
		// 消息头	
		var header = ..raw.convert(extra.pData, ..aaz.bilibili.packet.header(), offset)
		// 标准消息长度
		var packetLen = ..raw.swap(header.packetLength, "int");

		// 不完整，存着下次再读
		if(unreadLen < packetLen){ ..io.print("不完整")
			extra.toUnread(offset, unreadLen);
			return ; 
		}
		
		// 心跳回复就直接结束
		var isHeartbeat = ..aaz.bilibili.packet.unpack(extra.pData, offset, function(msgType, ret){
			..__postUi__(msgType, ret)
		});
		if(isHeartbeat){
			extra.reset();
			return ; 
		}

		
		// 偏移到下个数据
		offset += packetLen;
		
		unreadLen -= packetLen;
		// 读完了
		if(unreadLen == 0){
			extra.reset();
			return ; 
		}
		..io.print("多个消息")
	}	
}