import aaz.libhpsocket.app.client;

namespace aaz.libhpsocket.app.websocket.client;
class base{
	ctor(obj){
		this = ..aaz.libhpsocket.app.client(obj)	
	
		this.listener.onHandShake = function(component, connId){
			return __handler__.onHandShake(component);
		}
				
		this.listener.onHeader = function(component, connId, name, value){
    	
		}
	
		this.listener.onHeadersComplete = function(component, connId){	
    	
		}

		this.listener.onUpgrade = function(component, connId, upgradeType){
			return __handler__.onUpgrade(component, upgradeType);	
		}
		
		this.listener.onWsMessageHeader = function(component, connId, final, reserved, opCode, mask, bodyLen){
			return __handler__.onWsMessageHeader(component, final, reserved, opCode, mask, bodyLen);
		}
		
		this.listener.onWsMessageBody = function(component, connId, pData, len){
			return __handler__.onWsMessageBody(component, pData, len);	
		}
		
		this.listener.onWsMessageComplete = function(component, connId){
			return __handler__.onWsMessageComplete(component);
		}
		
		this.listener.onClose = function(component, connId, enOperation, errCode){
			return __handler__.onClose(component, connId, enOperation, errCode);
		}
	};
	send = function(data, ...){
		return this.component.sendWsMessage(data, ...);	
	};
	stop = function(){
		return this.component.stop(); 
	}
		
}
